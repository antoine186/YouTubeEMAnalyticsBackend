CREATE TABLE logging_schema.login_error_table
(
    login_error_table_id bigint NOT NULL,
    logging_message character varying(50) NOT NULL,
    PRIMARY KEY (login_error_table_id)
);

ALTER TABLE IF EXISTS logging_schema.login_error_table
    OWNER to postgres;

ALTER TABLE IF EXISTS logging_schema.login_error_table
    ALTER COLUMN login_error_table_id ADD GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 );

CREATE FUNCTION logging_schema.count_number_of_entries_in_login_error_table()
    RETURNS integer
    LANGUAGE 'sql'
    
AS $BODY$
SELECT COUNT(login_error_table_id)
FROM logging_schema.login_error_table
$BODY$;

ALTER FUNCTION logging_schema.count_number_of_entries_in_login_error_table()
    OWNER TO postgres;

ALTER TABLE IF EXISTS logging_schema.login_error_table
    ADD COLUMN "timestamp" timestamp with time zone NOT NULL;

CREATE PROCEDURE logging_schema.add_login_error_entry(_logging_message character varying, _timestamp timestamp with time zone)
LANGUAGE 'sql'
AS $BODY$
INSERT INTO logging_schema.login_error_table
(logging_message, timestamp)
VALUES
(_logging_message, _timestamp)
$BODY$;
ALTER PROCEDURE logging_schema.add_login_error_entry(character varying, timestamp with time zone)
    OWNER TO postgres;

CREATE PROCEDURE logging_schema.auto_delete_login_error_entry()
LANGUAGE 'sql'
AS $BODY$
DELETE FROM logging_schema.login_error_table 
WHERE EXTRACT(EPOCH FROM now()-"timestamp")/3600 >= 2
$BODY$;
ALTER PROCEDURE logging_schema.auto_delete_login_error_entry()
    OWNER TO postgres;