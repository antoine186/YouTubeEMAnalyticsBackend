CREATE SCHEMA youtube_schema
    AUTHORIZATION postgres;

CREATE TABLE youtube_schema.previous_channel_analysis
(
    previous_channel_analysis_id bigint NOT NULL,
    user_id bigint NOT NULL,
    PRIMARY KEY (previous_channel_analysis_id)
);

ALTER TABLE IF EXISTS youtube_schema.previous_channel_analysis
    OWNER to postgres;

ALTER TABLE IF EXISTS youtube_schema.previous_channel_analysis
    ADD CONSTRAINT user_id_fkey FOREIGN KEY (user_id)
    REFERENCES user_schema."user" (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_user_id_fkey
    ON youtube_schema.previous_channel_analysis(user_id);

ALTER TABLE IF EXISTS youtube_schema.previous_channel_analysis
    ADD COLUMN channel_id character varying(50) NOT NULL;

ALTER TABLE IF EXISTS youtube_schema.previous_channel_analysis
    ALTER COLUMN previous_channel_analysis_id ADD GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 );

CREATE TABLE youtube_schema.previous_video_analysis
(
    previous_video_analysis_id bigint NOT NULL,
    video_id character varying NOT NULL,
    previous_channel_analysis_id bigint NOT NULL,
    previous_video_analysis_json character varying(10000000) NOT NULL,
    PRIMARY KEY (previous_video_analysis_id)
);

ALTER TABLE IF EXISTS youtube_schema.previous_video_analysis
    OWNER to postgres;

CREATE FUNCTION youtube_schema.check_previous_channel_analysis(_user_id bigint, _channel_id character varying)
    RETURNS bigint
    LANGUAGE 'sql'
    
AS $BODY$
SELECT previous_channel_analysis_id
FROM youtube_schema.previous_channel_analysis
WHERE user_id = _user_id
AND channel_id = _channel_id
$BODY$;

ALTER FUNCTION youtube_schema.check_previous_channel_analysis(bigint, character varying)
    OWNER TO postgres;

CREATE FUNCTION youtube_schema.check_previous_video_analysis(_previous_channel_analysis_id bigint, _video_id character varying)
    RETURNS bigint
    LANGUAGE 'sql'
    
AS $BODY$
SELECT previous_video_analysis_id
FROM youtube_schema.previous_video_analysis
WHERE video_id = _video_id
AND previous_channel_analysis_id = _previous_channel_analysis_id
$BODY$;

ALTER FUNCTION youtube_schema.check_previous_video_analysis(bigint, character varying)
    OWNER TO postgres;

ALTER TABLE IF EXISTS youtube_schema.previous_video_analysis
    ALTER COLUMN previous_video_analysis_id ADD GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 );

ALTER TABLE IF EXISTS youtube_schema.previous_video_analysis
    ADD CONSTRAINT previous_channel_analysis_id_fkey FOREIGN KEY (previous_channel_analysis_id)
    REFERENCES youtube_schema.previous_channel_analysis (previous_channel_analysis_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_u
    ON youtube_schema.previous_video_analysis(previous_channel_analysis_id);

CREATE PROCEDURE youtube_schema.delete_video_analysis(_previous_channel_analysis_id bigint, _video_id character varying)
LANGUAGE 'sql'
AS $BODY$
DELETE FROM youtube_schema.previous_video_analysis
WHERE 
previous_channel_analysis_id = _previous_channel_analysis_id
AND
video_id = _video_id
$BODY$;
ALTER PROCEDURE youtube_schema.delete_video_analysis(bigint, character varying)
    OWNER TO postgres;

CREATE PROCEDURE youtube_schema.delete_channel_analysis(_user_id bigint, _channel_id character varying)
LANGUAGE 'sql'
AS $BODY$
DELETE FROM youtube_schema.previous_channel_analysis
WHERE 
user_id = _user_id
AND
channel_id = _channel_id
$BODY$;
ALTER PROCEDURE youtube_schema.delete_channel_analysis(bigint, character varying)
    OWNER TO postgres;

CREATE PROCEDURE youtube_schema.update_video_analysis(_previous_video_analysis_id bigint, _previous_video_analysis_json character varying)
LANGUAGE 'sql'
AS $BODY$
UPDATE youtube_schema.previous_video_analysis
SET previous_video_analysis_json = _previous_video_analysis_json
WHERE previous_video_analysis_id = _previous_video_analysis_id
$BODY$;
ALTER PROCEDURE youtube_schema.update_video_analysis(bigint, character varying)
    OWNER TO postgres;

CREATE PROCEDURE youtube_schema.add_channel_analysis(_user_id bigint, _channel_id character varying)
LANGUAGE 'sql'
AS $BODY$
INSERT INTO youtube_schema.previous_channel_analysis 
(user_id, channel_id)
VALUES 
(_user_id, _channel_id)
$BODY$;
ALTER PROCEDURE youtube_schema.add_channel_analysis(bigint, character varying)
    OWNER TO postgres;

CREATE PROCEDURE youtube_schema.add_video_analysis(_video_id character varying, _previous_channel_analysis_id bigint, _previous_video_analysis_json character varying)
LANGUAGE 'sql'
AS $BODY$
INSERT INTO youtube_schema.previous_video_analysis 
(video_id, previous_channel_analysis_id, previous_video_analysis_json)
VALUES 
(_video_id, _previous_channel_analysis_id, _previous_video_analysis_json)
$BODY$;
ALTER PROCEDURE youtube_schema.add_video_analysis(character varying, bigint, character varying)
    OWNER TO postgres;