CREATE TABLE payment_schema.stripe_subscription_client_secret
(
    stripe_subscription_client_secret_id bigint NOT NULL,
    user_id bigint NOT NULL,
    client_secret character varying(50) NOT NULL,
    PRIMARY KEY (stripe_subscription_client_secret_id)
);

ALTER TABLE IF EXISTS payment_schema.stripe_subscription_client_secret
    OWNER to postgres;

ALTER TABLE IF EXISTS payment_schema.stripe_subscription_client_secret
    ALTER COLUMN stripe_subscription_client_secret_id ADD GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 );

ALTER TABLE IF EXISTS payment_schema.stripe_subscription_client_secret
    ADD CONSTRAINT user_id_fkey FOREIGN KEY (user_id)
    REFERENCES user_schema."user" (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_user_id_fkey
    ON payment_schema.stripe_subscription_client_secret(user_id);

CREATE PROCEDURE payment_schema.add_stripe_subscription_client_secret(_user_id bigint, _client_secret character varying)
LANGUAGE 'sql'
AS $BODY$
INSERT INTO payment_schema.stripe_subscription_client_secret
(user_id, client_secret)
VALUES
(_user_id, _client_secret)
$BODY$;
ALTER PROCEDURE payment_schema.add_stripe_subscription_client_secret(bigint, character varying)
    OWNER TO postgres;

CREATE PROCEDURE payment_schema.delete_stripe_subscription_client_secret(_user_id bigint)
LANGUAGE 'sql'
AS $BODY$
DELETE FROM payment_schema.stripe_subscription_client_secret
WHERE user_id = _user_id
$BODY$;
ALTER PROCEDURE payment_schema.delete_stripe_subscription_client_secret(bigint)
    OWNER TO postgres;

CREATE FUNCTION payment_schema.get_stripe_subscription_client_secret(_user_id bigint)
    RETURNS character varying
    LANGUAGE 'sql'
    
AS $BODY$
SELECT client_secret
FROM payment_schema.stripe_subscription_client_secret
WHERE user_id = _user_id
$BODY$;

ALTER FUNCTION payment_schema.get_stripe_subscription_client_secret(bigint)
    OWNER TO postgres;

ALTER TABLE payment_schema.stripe_subscription_client_secret
    ALTER COLUMN client_secret TYPE text COLLATE pg_catalog."default";
